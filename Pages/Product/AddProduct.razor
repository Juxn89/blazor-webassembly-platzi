@using blazor_webassembly_platzi.Services
@using blazor_webassembly_platzi.Shared
@using blazor_webassembly_platzi.Models

@page "/product/add"
@inject IProductService productService
@inject ICategoryService categoryService
@inject NavigationManager navigationManager

<PageTitle>Add Product</PageTitle>
<ModuleTitle Title="Add Product" />

<button class="btn btn-dark" @onclick="@(() => navigationManager.NavigateTo("/product"))">
Go to product
</button>

<EditForm Model="@product" onsubmit="@Save">
	<div class="row">
		<div class="col-8 form-group">
			<label for="title" class="col-form-label"> Title</label>
			<InputText id="title" @bind-Value="product.title" required class="form-control"/> 
		</div>
		<div class="col form-group">
			<label for="price" class="col-form-label">Price</label>
			<InputNumber id="price" @bind-Value="product.price" min="0" required class="form-control" />
		</div>
	</div>
	
	<div class="row">
		<div class="col form-group">
			<label for="category" class="col-form-label">Category</label>
			<InputSelect id="category" @bind-Value="product.categoryId" required class="form-control">
				<option>Select Category...</option>
				@foreach (var category in categories)
				{
					<option value="@category.id">@category.name</option>
				}
			</InputSelect>
		</div>
		<div class="col form-group">
			<label for="image" class="col-form-label">Image (Url)</label>
			<InputText id="image" @bind-Value="product.image" required class="form-control" />
		</div>
	</div>
	<div class="form-group">
		<label for="description" class="col-form-label">Description</label>
		<InputTextArea id="description" @bind-Value="product.description" required class="form-control"></InputTextArea>
	</div>

	<hr />
	<button class="btn btn-primary" type="submit">Save</button>
</EditForm>

@code {
	private Product product = new();
	private List<Category> categories = new List<Category>();

	protected override async Task OnInitializedAsync(){
		categories = await categoryService.Get();
	}

	private async Task Save(){
		product.images = new List<string>() { product.image };
		await productService.Add(product);

		navigationManager.NavigateTo("/product");
	}
}